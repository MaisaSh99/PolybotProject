name: Deploy Polybot (Prod)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-polybot-prod:
    name: Deploy to EC2 (Prod)
    runs-on: ubuntu-latest

    env:
      PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_IP: ${{ secrets.EC2_HOST }}
      EC2_USER: ${{ secrets.EC2_USER }}
      REPO: ${{ github.repository }}
      OTELCOL_IP: ${{ secrets.EC2_MONITORING_HOST }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Upload service and observability scripts
        run: |
          scp -i key.pem -o StrictHostKeyChecking=no polybot-prod.service $EC2_USER@$EC2_IP:~/polybot-prod.service
          scp -i key.pem -o StrictHostKeyChecking=no otelcol-config.yaml $EC2_USER@$EC2_IP:~/otelcol-config.yaml
          scp -i key.pem -o StrictHostKeyChecking=no .github/scripts/install_otelcol.sh $EC2_USER@$EC2_IP:~/install_otelcol.sh
          scp -i key.pem -o StrictHostKeyChecking=no .github/scripts/install_prometheus.sh $EC2_USER@$EC2_IP:~/install_prometheus.sh

      - name: SSH and deploy
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << 'EOF'
            set -e

            echo "‚úÖ Installing dependencies..."
            while sudo fuser /var/lib/apt/lists/lock >/dev/null 2>&1; do
              echo "üîí Waiting for apt lock to be released..."
              sleep 3
            done

            sudo apt update
            sudo apt install -y git python3 python3-pip python3-venv wget curl unzip

            echo "üìÅ Cloning or updating repo..."
            cd /home/ubuntu
            if [ -d "PolybotProject" ]; then
              cd PolybotProject
              git reset --hard
              git clean -fd
              git checkout main
              git pull origin main
            else
              git clone --depth 1 https://github.com/MaisaSh99/PolybotProject.git PolybotProject || (sleep 3 && git clone --depth 1 https://github.com/MaisaSh99/PolybotProject.git PolybotProject)
              cd PolybotProject
              git checkout main
            fi

            echo "üì¶ Setting up Python venv..."
            if [ ! -d "venv" ]; then
              echo "üì¶ Creating Python virtual environment..."
              python3 -m venv venv
            fi
            source venv/bin/activate
            export S3_BUCKET_NAME="maisa-polybot-images"
            pip install --upgrade pip
            pip install -r requirements.txt

            echo "üìä Installing OpenTelemetry & Prometheus..."
            chmod +x ~/install_otelcol.sh ~/install_prometheus.sh
            sudo mv ~/otelcol-config.yaml /etc/otelcol/config.yaml
            export OTELCOL_IP="${OTELCOL_IP}"
            sudo -E ~/install_otelcol.sh
            sudo -E ~/install_prometheus.sh

            echo "üßº Killing old service if running..."
            sudo fuser -k 8080/tcp || true
            sudo systemctl stop polybot.service || true

            echo "‚öôÔ∏è Enabling and starting polybot.service"
            sudo mv ~/polybot-prod.service /etc/systemd/system/polybot.service
            sudo systemctl daemon-reload
            sudo systemctl enable polybot.service
            sudo systemctl restart polybot.service

            echo "‚è± Waiting for service..."
            sleep 10
            if curl -s http://localhost:8443/health | grep -q "ok"; then
              echo "‚úÖ Health check passed."
            else
              echo "‚ùå Health check failed. Showing logs:"
              journalctl -u polybot.service -n 30 --no-pager
              exit 1
            fi

            echo "‚úÖ Production Polybot deployment complete."
          EOF
