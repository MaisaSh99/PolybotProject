name: Deploy Polybot (Dev)

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  deploy-polybot-dev:
    name: Deploy to EC2 (Dev)
    runs-on: ubuntu-latest

    env:
      PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_IP: ${{ secrets.EC2_DEV_HOST }}
      EC2_USER: ${{ secrets.EC2_DEV_USER }}
      REPO: ${{ github.repository }}
      OTELCOL_IP: ${{ secrets.EC2_MONITORING_HOST }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Upload service and observability scripts
        run: |
          scp -i key.pem -o StrictHostKeyChecking=no polybot-dev.service $EC2_USER@$EC2_IP:~/polybot-dev.service
          scp -i key.pem -o StrictHostKeyChecking=no otelcol-config.yaml $EC2_USER@$EC2_IP:~/otelcol-config.yaml
          scp -i key.pem -o StrictHostKeyChecking=no .github/scripts/install_otelcol.sh $EC2_USER@$EC2_IP:~/install_otelcol.sh
          scp -i key.pem -o StrictHostKeyChecking=no .github/scripts/install_prometheus.sh $EC2_USER@$EC2_IP:~/install_prometheus.sh

      - name: SSH and deploy
        run: |
          ssh -i key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_IP << 'EOF'
            set -e

            echo "✅ Installing dependencies..."
            sudo apt update
            sudo apt install -y git python3 python3-pip python3-venv wget curl unzip

            echo "📁 Cloning or updating repo..."
            cd /home/ubuntu
            if [ -d "PolybotProject" ]; then
              cd PolybotProject
              git reset --hard
              git clean -fd
              git checkout dev
              git pull origin dev
            else
              git clone https://github.com/${REPO}.git PolybotProject
              cd PolybotProject
              git checkout dev
            fi

            echo "📦 Setting up Python venv..."
            if [ -d "venv" ]; then
              rm -rf venv
            fi
            python3 -m venv venv
            source venv/bin/activate
            export S3_BUCKET_NAME="maisa-dev-bucket"
            pip install --upgrade pip
            pip install -r requirements.txt

            echo "📊 Installing OpenTelemetry & Prometheus..."
            chmod +x ~/install_otelcol.sh ~/install_prometheus.sh
            sudo mv ~/otelcol-config.yaml /etc/otelcol/config.yaml
            export OTELCOL_IP="${OTELCOL_IP}"
            sudo -E ~/install_otelcol.sh
            sudo -E ~/install_prometheus.sh

            echo "🧼 Killing old service if running..."
            sudo fuser -k 8080/tcp || true
            sudo systemctl stop polybot-dev.service || true

            echo "⚙️ Enabling and starting polybot-dev.service"
            sudo mv ~/polybot-dev.service /etc/systemd/system/polybot-dev.service
            sudo systemctl daemon-reload
            sudo systemctl enable polybot-dev.service
            sudo systemctl restart polybot-dev.service

            echo "⏱ Waiting for service..."
            sleep 10
            if curl -s http://localhost:8443/health | grep -q "ok"; then
              echo "✅ Health check passed."
            else
              echo "❌ Health check failed. Showing logs:"
              journalctl -u polybot-dev.service -n 30 --no-pager
              exit 1
            fi

            echo "✅ Dev Polybot deployment complete."
          EOF
